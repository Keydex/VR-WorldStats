// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class CSVData : MonoBehaviour
{
    public TextAsset file;

    void Start()
    {
        Load(file);
        //Debug.Log(Find_Country("United States").Change);
    }

    void Update()
    {

    }

    public class Row
    {
        public string Country;
        public string Currency;
        public string Date;
        public string Change;
        public string url1;
        public string url2;
        public string url3;

    }

    List<Row> rowList = new List<Row>();
    bool isLoaded = false;

    public bool IsLoaded()
    {
        return isLoaded;
    }

    public List<Row> GetRowList()
    {
        return rowList;
    }

    public void Load(TextAsset csv)
    {
        rowList.Clear();
        string[][] grid = CsvParser2.Parse(csv.text);
        for (int i = 1; i < grid.Length; i++)
        {
            Row row = new Row();
            row.Country = grid[i][0];
            row.Currency = grid[i][1];
            row.Date = grid[i][2];
            row.Change = grid[i][3];
            row.url1 = grid[i][4];
            row.url2 = grid[i][5];
            row.url3 = grid[i][6];

            rowList.Add(row);
        }
        isLoaded = true;
    }

    public int NumRows()
    {
        return rowList.Count;
    }

    public Row GetAt(int i)
    {
        if (rowList.Count <= i)
            return null;
        return rowList[i];
    }

    public Row Find_Country(string find)
    {
        return rowList.Find(x => x.Country == find);
    }
    public List<Row> FindAll_Country(string find)
    {
        return rowList.FindAll(x => x.Country == find);
    }
    public Row Find_Currency(string find)
    {
        return rowList.Find(x => x.Currency == find);
    }
    public List<Row> FindAll_Currency(string find)
    {
        return rowList.FindAll(x => x.Currency == find);
    }
    public Row Find_Date(string find)
    {
        return rowList.Find(x => x.Date == find);
    }
    public List<Row> FindAll_Date(string find)
    {
        return rowList.FindAll(x => x.Date == find);
    }
    public Row Find_Change(string find)
    {
        return rowList.Find(x => x.Change == find);
    }
    public List<Row> FindAll_Change(string find)
    {
        return rowList.FindAll(x => x.Change == find);
    }
    public Row Find_url1(string find)
    {
        return rowList.Find(x => x.url1 == find);
    }
    public List<Row> FindAll_url1(string find)
    {
        return rowList.FindAll(x => x.url1 == find);
    }
    public Row Find_url2(string find)
    {
        return rowList.Find(x => x.url2 == find);
    }
    public List<Row> FindAll_url2(string find)
    {
        return rowList.FindAll(x => x.url2 == find);
    }
    public Row Find_url3(string find)
    {
        return rowList.Find(x => x.url3 == find);
    }
    public List<Row> FindAll_url3(string find)
    {
        return rowList.FindAll(x => x.url3 == find);
    }
}
